// Generated by view binder compiler. Do not edit!
package com.vistoria.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vistoria.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRoomBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button buttonAddPhoto;

  @NonNull
  public final Button buttonViewPhotos;

  @NonNull
  public final ImageView imageViewRoom;

  @NonNull
  public final TextView roomStatus;

  @NonNull
  public final TextView textViewRoomDescription;

  private ItemRoomBinding(@NonNull CardView rootView, @NonNull Button buttonAddPhoto,
      @NonNull Button buttonViewPhotos, @NonNull ImageView imageViewRoom,
      @NonNull TextView roomStatus, @NonNull TextView textViewRoomDescription) {
    this.rootView = rootView;
    this.buttonAddPhoto = buttonAddPhoto;
    this.buttonViewPhotos = buttonViewPhotos;
    this.imageViewRoom = imageViewRoom;
    this.roomStatus = roomStatus;
    this.textViewRoomDescription = textViewRoomDescription;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRoomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRoomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_room, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRoomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddPhoto;
      Button buttonAddPhoto = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddPhoto == null) {
        break missingId;
      }

      id = R.id.buttonViewPhotos;
      Button buttonViewPhotos = ViewBindings.findChildViewById(rootView, id);
      if (buttonViewPhotos == null) {
        break missingId;
      }

      id = R.id.imageViewRoom;
      ImageView imageViewRoom = ViewBindings.findChildViewById(rootView, id);
      if (imageViewRoom == null) {
        break missingId;
      }

      id = R.id.room_status;
      TextView roomStatus = ViewBindings.findChildViewById(rootView, id);
      if (roomStatus == null) {
        break missingId;
      }

      id = R.id.textViewRoomDescription;
      TextView textViewRoomDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewRoomDescription == null) {
        break missingId;
      }

      return new ItemRoomBinding((CardView) rootView, buttonAddPhoto, buttonViewPhotos,
          imageViewRoom, roomStatus, textViewRoomDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
